//  merge_sort.cpp//  Algorithms HW_1////  Created by Yakov Leonov on 2/12/14.//  Compiled in Xcode#include <iostream>#include <cstdlib>#include <ctime>#include <time.h>using namespace std;const unsigned long long inf = -1ULL;void merge(int* A,int a,const int b, const int c){    const int left=b-a+1;        const int right=c-b;        int* Left = new int [left+1];    int* Right = new int [right+1];    Left[left]=inf;    Right[right]=inf;        // left side of array    for(int i = 0; i < left; i++)        Left[i] = A[a+i];       // right side of array    for (int j = 0; j < right; j++)        Right[j] = A[b+j+1];        int i=0;    int j=0;    int k;     //merge, delete, sort        for(k=a; k <= c && i < left && j < right; ++k)    {        if(Left[i] <= Right[j])        {            A[k] = Left[i];            i++;        }        else        {            A[k] = Right[j];            j++;        }    }       while (i < left) {A[k++] = Left[i++];}    while (j < right) {A[k++] = Right[j++];}}void merge_sort(int* A, const int p, const int r){    if (p < r)    {        int q = (p+r)/2;        merge_sort(A, p,q);        merge_sort(A,q+1,r);        merge(A,p,q,r);    }}int main(){    int size;    cout<< "What is the size of the array?" <<endl;    cin>>size;    cout<<endl;        int arr [size];    clock_t time;    time = clock();    //For loop fills in array with random numbers from 0 - 100    for(int i = 0; i < size; i++)    {        arr[i] = rand()%101;        cout << arr[i] << " ";    }        cout<<endl;        merge_sort(arr,0,size-1);        cout << "Your array has been sorted: " <<endl;        for(int i = 0; i < size; i++) cout << arr[i] << " ";        cout <<endl;    time = clock() - time;        float seconds = time / CLOCKS_PER_SEC;        printf ("The Merge Sort took %f seconds to complete.\n",time,((float)time)/CLOCKS_PER_SEC);        return 0;}