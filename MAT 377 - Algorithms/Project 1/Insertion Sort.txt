//  insertion_sort.cpp//  Algorithms HW_1////  Created by Yakov Leonov on 2/12/14.//  Compiled in Xcode// Yakov Leonov// Insertion Sort#include <iostream>#include <cstdlib>#include <ctime>#include <time.h>using namespace std;void insert_sort(int array[], int size){    int a , b;    for (int i = 1; i < size; i++)        {            a = i;            while (a > 0 && array[a - 1] > array[a])            {                b = array[a];                array[a] = array[a - 1];                array[a - 1] = b;                a--;            }        }}int main(){    int size;    cout<< "What is the size of the array?" <<endl;    cin>>size;    cout<<endl;        int arr [size];    clock_t time;    time = clock();    //For loop fills in array with random numbers from 0 to 100    for(int i = 0; i < size; i++)    {        arr[i] = rand()%101;        cout << arr[i] << " ";    }        cout<<endl;    insert_sort(arr,size);        cout << "Your array has been sorted: " <<endl;        for(int i = 0; i < size; i++) cout << arr[i] << " ";        cout <<endl;    time = clock() - time;        float seconds = time / CLOCKS_PER_SEC;        printf ("The Insertion Sort took %f seconds to complete.\n",time,((float)time)/CLOCKS_PER_SEC);        return 0;}